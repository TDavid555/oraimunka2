using System;
using System.Collections.Generic;
using System.Linq;
using System.Management.Instrumentation;
using System.Text;
using System.Threading.Tasks;

namespace absztrakcio
{
    public abstract class Vehicle
    {
        public string Make { get; set; }
        public string Model { get; set; }
        public int Price { get; set; }

        public Vehicle(string make, string model, int price)
        {
            Make = Make;
            Model = model;
            Price = price;
        }
        // Absztrack metódus, amit az alosztályoknak meg kell valósítani
        public abstract void Start();
        // Konkrét metódus
        public void DisplayInfo()
        {
            Console.WriteLine($"Make: {Make}, Model: {Model}, Price: {Price}");
        }
    }

    public class Car : Vehicle
    {
        public Car(string make, string model, int price) : base(make, model, price) { }

        public override void Start()
        {
            Console.WriteLine("Car is starting with a key.");
        }
    }

    public class Bicycle : Vehicle
    {
        public Bicycle(string make, string model, int price) : base(make, model, price) { }

        public override void Start()
        {
            Console.WriteLine("Bicycle is starting with a pedaling.");
        }
    }

    public class Plane : Vehicle
    {
        public Plane(string make, string model, int price) : base(make, model, price) { }

        public override void Start()
        {
            Console.WriteLine("Plane is starting with a pushing a lever.");
        }
    }



    internal class Program
    {
        static void Main(string[] args)
        {
            Vehicle car = new Car("Toyota", "Corolla",3500000);
            Vehicle bicycle = new Bicycle("Giant", "Escape 3",300000);
            Vehicle plane = new Plane("Repcsi", "Model P", 55555);
            car.DisplayInfo();
            car.Start();
            bicycle.DisplayInfo();
            bicycle.Start();
            plane.DisplayInfo();
            plane.Start();

            //1.f: gyermeket létrehozni: Plane és erre is egy példányt
            //tárold egy a gyermekeket és
            //készíts egy függvényt ami minden jarmu peldanyt megvizsgal es osszertek

            List<Vehicle> list = new List<Vehicle>();
            list.Add(car);
            list.Add(bicycle);
            list.Add(plane);

            Console.WriteLine(Osszertek(list));
           

            Console.ReadKey();
        }

        public static int Osszertek(List<Vehicle> list)
        {
            int ossz = 0;
            foreach (Vehicle v in list) {
                ossz += v.Price;
            }
            return ossz;
        }

    }
}


Házi:
Tervezetet, dokumentaciot kesziteni (draw.io).
Hobbi: absztrakt ősosztály min 3 gyerek.
mindegyik absz eljárás és legyen egy amely kiir mindent (DisplayInfo).
minden gyerek peldanyositasa 2-2.
minden gyerekre 1-1 fuggvenyt kesziteni (pl melyiknek ara a legnagyobb).
mindenhol komment legyen.
