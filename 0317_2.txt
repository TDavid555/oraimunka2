using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _0317_2
{
    class Bank<T> where T : struct, IComparable<T>
    {
        private List<T> befizetesek = new List<T>();
        private T egyenleg;
        private T maxKifizet;

        public Bank()
        {
            this.egyenleg = default(T);
        }

        public void Befizet(T osszeg)
        {
            befizetesek.Add(osszeg);
            egyenleg = (dynamic)egyenleg + osszeg;
            Console.WriteLine($"Befizetve: {osszeg} Ft");
        }



        public void Kivesz(T osszeg, T limit)
        {
            bool osszeg_nagyobb = false;
            if(osszeg > (dynamic)limit)
            {
                Console.WriteLine("Túllépted a limitet!");
                osszeg_nagyobb = true;
            }

            if(osszeg_nagyobb == false)
            {
                if ((dynamic)egyenleg >= (dynamic)osszeg)
                {
                    egyenleg = (dynamic)egyenleg - (dynamic)osszeg;
                    Console.WriteLine($"Kivett: {osszeg} Ft");
                }
                else
                {
                    Console.WriteLine($"Nincs ekkora összeg a számládon! Egyenleged: {egyenleg} Ft");
                }
            }
              
        }

        public void Egyenleg()
        {
            Console.WriteLine($"Jelenlegi egyenleg: {egyenleg} Ft");
        }

        public void Nullazo()
        {
            egyenleg = default(T);
            befizetesek.Clear();
            Console.WriteLine("Az egyenleg lenullázva!");
        }
    }
    internal class Program
    {
        static void Main(string[] args)
        {
            double limit = 50000;
            Bank<double> szamla = new Bank<double>();

            string valasztott = "";

            while (valasztott != "5")
            {
                Console.WriteLine();
                Console.WriteLine("Mit szeretnél csinálni?");
                Console.WriteLine("1. Befizetés");
                Console.WriteLine("2. Kp. felvétel");
                Console.WriteLine("3. Egyenleg nullázása");
                Console.WriteLine("4. Limitmódosítás");
                Console.WriteLine("5. Kilépés");
                string valasztas = Console.ReadLine();

                
                valasztott = valasztas;


                if (valasztas == "1" || valasztas == "2" || valasztas == "3" || valasztas == "4" || valasztas == "5")
                {
                    if (valasztas == "1")
                    {
                        Console.WriteLine("Összeg: ");
                        int osszeg = int.Parse(Console.ReadLine());
                        szamla.Befizet(osszeg);
                        szamla.Egyenleg();
                    }

                    if (valasztas == "2")
                    {
                        Console.WriteLine("Összeg: ");
                        int osszeg = int.Parse(Console.ReadLine());
                        szamla.Kivesz(osszeg, limit);
                        szamla.Egyenleg();
                    }

                    if (valasztas == "3")
                    {
                        szamla.Nullazo();
                        szamla.Egyenleg();
                    }

                    if (valasztas == "4")
                    {
                        Console.WriteLine("Új limit: ");
                        int uj_limit = int.Parse(Console.ReadLine());
                        limit = uj_limit;
                    }

                    if (valasztas == "5")
                    {
                        return;
                    }

                }
                else
                {
                    Console.WriteLine("Ilyen lehetőség nincs!");
                }





            }

            Console.ReadKey();
        }
    }
}
